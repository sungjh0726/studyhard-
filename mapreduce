import re


def mapdata():
    data ='''0067011990999991950051507004+68750+023550FM-12+038299999V0203301N00671220001CN9999999N9+00001+99999999999
    0043011990999991945051512004+68750+023550FM-12+038299999V0203201N00671220001CN9999999N9+00225+99999999999
    0043011990999991950051518004+68750+023550FM-12+038299999V0203201N00261220001CN9999999N9-00111+99999999999
    0043012650999991949032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+01117+99999999999
    0043012650999991943032418004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00384+99999999999
    0043012650999991945032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00167+99999999999
    0043012650999991947032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9-00150+99999999999
    0043012650999991949032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00117+99999999999
    0043012650999991947032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00227+99999999999
    0043012650999991945032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+01116+99999999999
    0043012650999991943032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9-00114+99999999999
    0043012650999991943032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00191+99999999999
    0043012650999991949032412004+62300+010750FM-12+048599999V0202701N00461220001CN0500001N9+00131+99999999999'''

       #year, data
    years = []
    datas = []
    for s in sdata:
        yr = re.findall(pattern, s)
        year = yr[0][0:4]
        years.append(year)

        data = re.findall(dpattern,s)
        data = data[0]
        data = data[-6:-1]
        datas.append(data)

   
    mapdata = []
    for idx, d in enumerate(datas):
        if d[-1] in '0,1,4,5,9':
            years.pop(idx)
            datas.pop(idx)
        mapdata.append((years[idx], datas[idx])) 

    return mapdata
    

  
 
    dic = {}
    for l in mapdata():
        if l[0] not in dic.keys():
            dic[l[0]] = [l[1]]
        else:
            lst = dic[l[0]]
            lst.append(l[1])

 
    s = ''
    for k, v in dic.items():
        v.sort()
        ret =k + '\t' + max(v)
        s = s + '\n' +ret
            
    print(s)
    return s

# mapdata()
reducedata()
